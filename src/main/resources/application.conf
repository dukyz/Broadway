akka {
  actor {
    provider = "cluster"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = ${?hostname}
      port = 12551
      port = ${?port}
    }
  }
  cluster {
    name = "default"
    name = ${?cluster_name}
    seed-nodes = [
      "akka.tcp://"${akka.cluster.name}"@"${akka.remote.netty.tcp.hostname}":"${akka.remote.netty.tcp.port}
    ]
    distributed-data {
      durable {
        keys = ["*"]
        # Fully qualified class name of the durable store actor. It must be a subclass
        # of akka.actor.Actor and handle the protocol defined in
        # akka.cluster.ddata.DurableStore. The class must have a constructor with
        # com.typesafe.config.Config parameter.
        store-actor-class = akka.cluster.ddata.TestStore
      }
    }
  }
}

akka.persistence.journal.plugin = "cassandra-journal"
akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"


default {
  common {
    env {
      singletons {
        Cassandra {
          hosts = ["127.0.0.1"]
          #This should be set only as 127.0.0.1 for connecting to local cassandra instance.
          # But you could also set some hosts for your certain purpose.
          # And the first successfully contacted host will be used to define the local data-center for the client.
          port = 9042
        }
        Neo4j {
          host = "127.0.0.1"
          port = 7687
          user = "neo4j"
          password = "123"
          connection-pool-size = 25
        }
        NetworkUtil {
          #system-level proxyValidate setting
          # how many retries after the first connection failure
          max-retries = 0
          # unit in seconds
          connection-timeout = 2
        }
      }
    }
  }
}